---
openapi: '3.0.2'
info:
  title: Go Simple API
  version: '1.0'

servers:
  - url: http://localhost:1360/api/{apiVersion}
    variables:
      "apiVersion":
        default: v1
        enum: [ "v1" ]

tags:
  - name: User
    description: Create, modify, and list users
  - name: Auth
    description: Generate and refresh authentication tokens

paths:
  "/users":
    get:
      description: Return all users from the database
      tags: [ "User" ]
      responses:
        "200":
          description: List of UserModel
          content:
            "application/json":
              schema:
                type: array
                items: { $ref: "#/components/schemas/UserModel" }

  "/user/{id}":
    get:
      description: Return a single user from the database by their ID
      tags: [ "User" ]
      parameters:
        - name: id
          in: path
          required: true
          schema: { $ref: "#/components/schemas/UserId" }
      responses:
        "200":
          description: The User information
          content:
            "application/json":
              schema: { $ref: "#/components/schemas/IdentifiedUser" }
        "404":
          description: The User was not found in the database
        "400":
          description: The query parameter "id" was incorrect
          content:
            "application/json":
              schema: { $ref: "#/components/schemas/ErrorMessage" }

    patch:
      description: Update some user information
      tags: [ "User" ]
      parameters:
        - name: id
          in: path
          required: true
          schema: { $ref: "#/components/schemas/UserId" }
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                "username":
                  type: string
      responses:
        "200":
          description: User updated successfully
          content:
            "application/json":
              schema: { $ref: "#/components/schemas/IdentifiedUser" }

    delete:
      description: Removes an user from the database
      tags: [ "User" ]
      parameters:
        - name: id
          in: path
          required: true
          schema: { $ref: "#/components/schemas/UserId" }
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                "password":
                  type: string
                  format: password
      responses:
        "204":
          description: User was successfully removed

  "/user":
    post:
      description: Add a new User to the database
      tags: [ "User" ]
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema: { $ref: "#/components/schemas/UserWithPassword" }
      responses:
        "201":
          description: The brand new User with their ID
          content:
            "application/json":
              schema: { $ref: "#/components/schemas/IdentifiedUser" }
          headers:
            "Location":
              schema:
                type: string
                example: http://localhost:1360/api/v1/user/5
        "400":
          description: Incorrect request body
          content:
            "application/json":
              schema: { $ref: "#/components/schemas/ErrorMessage" }

  "/user/{id}/password":
    patch:
      description: Change user password
      tags: [ "User" ]
      parameters:
        - name: id
          in: path
          required: true
          schema: { $ref: "#/components/schemas/UserId" }
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                "lastPassword":
                  type: string
                  format: password
                "newPassword":
                  type: string
                  format: password
              required:
                - "lastPassword"
                - "newPassword"
      responses:
        "204":
          description: Password was changed successfully
        "401":
          description: The last password was incorrect

components:
  schemas:
    "ErrorMessage":
      type: object
      properties:
        "error":
          type: string
    "UserId":
      type: integer
      format: int32
    "UserModel":
      type: object
      properties:
        "username":
          type: string
        "email":
          type: string
          format: email
    "IdentifiedUser":
        type: object
        allOf:
          - $ref: "#/components/schemas/UserModel"
          - $ref: "#/components/schemas/UserId"
    "UserWithPassword":
      type: object
      allOf:
          - $ref: "#/components/schemas/UserModel"
      properties:
        "password":
          type: string
          format: password
      required:
        - "username"
        - "email"
        - "password"